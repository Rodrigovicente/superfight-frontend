{"version":3,"sources":["index.js"],"names":["CardReact","props","card","isChoosing","isFighter","state","isSelected","isActionDone","isFighting","prevProps","this","setState","actions","onClick","classes","isChar","isActionCard","className","handleClick","disabled","text","React","Component","CardLineReact","cards","selectedCard","isChosen","hasVoted","isWinner","centerCards","cardIndex","selectCard","runActions","cardList","map","key","listMinWidth","length","listClasses","selectorClasses","handleVote","style","minWidth","Game","player","game","selectedCharCard","selectedAttrCard","chooseTimer","fightTimer","votedFighter","winner","gameCount","playerData","players","some","playerIter","i","socketID","setSelectedCharCard","setSelectedAttrCard","handleRunActions","fighterNum","chooseCards","isFighter1","fighters","fighter1","fighter2","isEndingRound","console","log","content","charCards","handleCharSelection","attrCards","handleAttrSelection","username","fighterCards","Login","room","maxRound","inputMinRound","inputMaxRound","maxPlayers","isPrivate","loginError","tabSelected","handleChange","bind","handleFindGame","handleCreateRoom","handleChangeTab","replace","trim","event","target","name","value","checked","findRoom","createRoom","tabNum","setLoginError","formSelected","type","maxLength","onChange","min","max","GameHeader","roundCount","nextGameTimer","GameScoreboard","winnerPlayer","winnerCards","scoreboard","sort","p1","p2","winCount","App","useState","isLogged","setLogged","setName","setRoom","setPlayer","setGame","setChooseTimer","setFightTimer","setIsFighting","setRoundCount","setIsFighter","setWinner","setWinnerPlayer","setNextGameTimer","setGameCount","isPlayerListHidden","setPlayerListHidden","checkIsFighter","auxSelectedCharCard","auxSelectedAttrCard","socket","emit","auxIsFighter","isFighter2","useEffect","on","errorMsg","newPlayer","newGame","newIsFighter","newGameCount","roomName","document","title","message","removeListener","disconnect","useDeepCompareEffect","fighter1Name","fighter2Name","nextFighter","playersList","href","socketIOClient","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.a8a9d69b.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport useDeepCompareEffect from 'use-deep-compare-effect';\nimport socketIOClient from 'socket.io-client';\n//import 'bootstrap/dist/css/bootstrap.min.css';\n//import 'bootstrap/scss/bootstrap.scss';\nimport './index.scss';\n\n// const ENDPOINT = process.env.REACT_APP_SERVER_URL;\nconst ENDPOINT = \"http://superfight-backend-superfight-backend.apps.us-west-1.starter.openshift-online.com/\";\n\n// class Card {\n// \tconstructor(text, isChar, actions) {\n// \t\tthis.text = text;\n// \t\tthis.isChar = isChar;\n// \t\tthis.actions = actions;\n// \t}\n// }\n\nclass CardReact extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.card = props.card;\n\t\tthis.isChoosing = props.isChoosing;\n\t\tthis.isFighter = props.isFighter;\n\t\tthis.state = {\n\t\t\tisSelected: props.isSelected,\n\t\t\tisActionDone: false,\n\t\t\tisFighting: props.isFighting\n\t\t};\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tconst {isSelected, isFighting} = this.props;\n\t\tif (prevProps.isSelected !== isSelected) {\n\t\t\tthis.setState({isSelected: isSelected});\n\t\t}\n\t\tif (prevProps.isFighting !== isFighting) {\n\t\t\tthis.setState({isFighting: isFighting});\n\t\t}\n\t}\n\n\thandleClick(actions) {\n\t\tthis.props.onClick(actions);\n\t\tthis.setState({isActionDone: true});\n\t}\n\n\trender() {\n\t\t//this.state.isSelected = this.props.isSelected;\n\t\tconst cardType = this.card.isChar ? ' char' : ' attr';\n\t\tconst selected = (this.state.isSelected && this.isChoosing) ? ' selected' : '';\n\t\tconst actionDone = (this.card.isActionCard && !this.state.isActionDone && !this.isChoosing && this.isFighter && this.state.isFighting) ? ' action-card' : '';\n\t\tconst classes = 'sf-card' + cardType + selected + actionDone;\n\t\tconst actions = this.card.actions ? this.card.actions : null;\n\n\t\treturn (\n\t\t\t<li className={classes}>\n\t\t\t\t<button onClick={() => this.handleClick(actions)} disabled={!(this.isChoosing || (this.card.isActionCard && !this.state.isActionDone && this.isFighter && this.state.isFighting))}>{this.card.text}</button>\n\t\t\t</li>\n\t\t);\n\t}\n}\n\nclass CardLineReact extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tcards: props.cards,\n\t\t\tisChoosing: props.isChoosing,\n\t\t\tselectedCard: null,\n\t\t\tisFighter: props.isFighter,\n\t\t\tisFighting: props.isFighting,\n\t\t\tisChosen: false,\n\t\t\thasVoted: false,\n\t\t\tisWinner: null,\n\t\t\tcenterCards: props.centerCards\n\t\t};\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tconst {cards, isFighter, isFighting, isChosen, hasVoted, isWinner} = this.props;\n\t\tif (prevProps.cards !== cards) {\n\t\t\tthis.setState({cards: cards});\n\t\t}\n\t\tif (prevProps.isFighter !== isFighter) {\n\t\t\tthis.setState({isFighter: isFighter});\n\t\t}\n\t\tif (prevProps.isFighting !== isFighting) {\n\t\t\tthis.setState({isFighting: isFighting});\n\t\t}\n\t\tif (prevProps.isChosen !== isChosen) {\n\t\t\tthis.setState({isChosen: isChosen});\n\t\t}\n\t\tif (prevProps.hasVoted !== hasVoted) {\n\t\t\tthis.setState({hasVoted: hasVoted});\n\t\t}\n\t\tif (prevProps.isWinner !== isWinner) {\n\t\t\tthis.setState({isWinner: isWinner});\n\t\t}\n\t}\n\n\thandleClick(cardIndex, actions) {\n\t\tthis.setState({ selectedCard: cardIndex });\n\t\tthis.props.selectCard(cardIndex);\n\t\tif(actions != null && this.props.runActions) this.props.runActions(actions);\n\t}\n\n\trender() {\n\t\tconst cards = this.state.cards;\n\t\tconst isChoosing = this.state.isChoosing;\n\t\tconst isFighter = this.state.isFighter;\n\t\tconst isFighting = this.state.isFighting;\n\t\tconst isChosen = this.state.isChosen;\n\t\tconst hasVoted = this.state.hasVoted;\n\t\tconst isWinner = this.state.isWinner;\n\t\tconst centerCards = this.state.centerCards;\n\n\n\t\tconst cardList = cards.map((card, cardIndex) => {\n\t\t\tconst isSelected = this.state.selectedCard === cardIndex ? true : false;\n\t\t\treturn (\n\t\t\t\t<CardReact\n\t\t\t\t\tkey={card.key}\n\t\t\t\t\tcard={card}\n\t\t\t\t\tisFighter={isFighter}\n\t\t\t\t\tisChoosing={isChoosing}\n\t\t\t\t\tisFighting={isFighting}\n\t\t\t\t\tisSelected={isSelected}\n\t\t\t\t\tonClick={(actions) => this.handleClick(cardIndex, actions)}\n\t\t\t\t/>\n\t\t\t);\n\t\t});\n\n\t\t//console.log(\"cards:\");\n\t\t//console.log(cards);\n\t\tconst listMinWidth = cardList.length * 155;\n\t\tconst listClasses = 'card-line' + (isChoosing || centerCards ? ' justify-content-center' : '');\n\t\tconst selectorClasses = 'card-line-selection' + ((isFighting || hasVoted) ? '' : ' is-voting') + (isChosen ? ' is-chosen' : '') + (isWinner != null ? (isWinner ? ' is-winner' : ' is-loser') : '');\n\n\t\treturn (\n\t\t\t<div className={selectorClasses}>\n\t\t\t\t<div className=\"card-line-select-button\">\n\t\t\t\t\t<button onClick={() => this.props.handleVote()}>Vote</button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"cards-wrapper\">\n\t\t\t\t\t<ul className={listClasses} style={{minWidth: listMinWidth}}>\n\t\t\t\t\t\t{cardList}\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nclass Game extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tplayer: props.player,\n\t\t\tgame: props.game,\n\t\t\tisChoosing: true,\n\t\t\tselectedCharCard: null,\n\t\t\tselectedAttrCard: null,\n\t\t\tchooseTimer: props.chooseTimer,\n\t\t\tfightTimer: props.fightTimer,\n\t\t\tisFighting: true,\n\t\t\tvotedFighter: null,\n\t\t\thasVoted: false,\n\t\t\twinner: null,\n\t\t\tgameCount: props.gameCount\n\t\t};\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tconst {game, player, chooseTimer, fightTimer, isFighting, winner, gameCount} = this.props;\n\t\tif (prevProps.game !== game) {\n\t\t\tthis.setState({game: game});\n\t\t\tlet playerData;\n\t\t\tgame.players.some((playerIter, i) => {\n\t\t\t\tif(playerIter.socketID == player.socketID) {\n\t\t\t\t\tplayerData = playerIter;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t});\n\t\t\tif (playerData) this.setState({hasVoted: playerData.hasVoted});\n\t\t\tif(playerData ? !playerData.hasVoted : false) this.setState({votedFighter: null});\n\t\t\tgame.players.some((player) => {\n\t\t\t\tif(player.socketID == this.state.player.socketID) {\n\t\t\t\t\tthis.setState({isChoosing: player.isChoosing});\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t});\n\t\t}\n\t\tif (prevProps.player !== player) {\n\t\t\tthis.setState({player: player});\n\t\t\tthis.setState({isChoosing: player.isChoosing});\n\t\t}\n\t\tif (prevProps.chooseTimer !== chooseTimer) {\n\t\t\tthis.setState({chooseTimer: chooseTimer});\n\t\t}\n\t\tif (prevProps.fightTimer !== fightTimer) {\n\t\t\tthis.setState({fightTimer: fightTimer});\n\t\t}\n\t\tif (prevProps.isFighting !== isFighting) {\n\t\t\tthis.setState({isFighting: isFighting});\n\t\t}\n\t\tif (prevProps.winner !== winner) {\n\t\t\tthis.setState({winner: winner});\n\t\t}\n\t\tif (prevProps.gameCount !== gameCount) {\n\t\t\tthis.setState({gameCount: gameCount});\n\t\t}\n\t}\n\n\thandleCharSelection(cardIndex) {\n\t\tthis.setState({selectedCharCard: cardIndex});\n\t\tthis.props.setSelectedCharCard(cardIndex);\n\t}\n\thandleAttrSelection(cardIndex) {\n\t\tthis.setState({selectedAttrCard: cardIndex});\n\t\tthis.props.setSelectedAttrCard(cardIndex);\n\t}\n\n\thandleRunActions(actions) {\n\t\tthis.props.handleRunActions(actions);\n\t}\n\n\thandleVote(fighterNum) {\n\t\tthis.setState({votedFighter: fighterNum});\n\t\tthis.props.handleVote(fighterNum);\n\n\t}\n\n\tchooseCards() {\n\t\tthis.setState({isChoosing: false});\n\t\tthis.props.chooseCards();\n\t}\n\n\trender() {\n\t\tconst player = this.state.player;\n\t\tconst game = this.state.game;\n\t\t//const handCards = this.state.player.charCards.concat(this.state.player.attrCards);\n\t\tconst isChoosing = this.state.isChoosing;\n\t\tconst isFighting = this.state.isFighting;\n\t\tconst isFighter1 = game.fighters[0] != null ? (game.players[game.fighters[0]] != null ? (game.players[game.fighters[0]].socketID === player.socketID) : false) : false;\n\t\tconst isFighter = isFighter1 || (game.fighters[1] != null ? (game.players[game.fighters[1]] != null ? (game.players[game.fighters[1]].socketID === player.socketID) : false) : false);\n\t\tconst chooseTimer = this.state.chooseTimer;\n\t\tconst fightTimer = this.state.fightTimer;\n\t\tconst fighter1 = this.state.game.players[this.state.game.fighters[0]];\n\t\tconst fighter2 = this.state.game.players[this.state.game.fighters[1]];\n\t\tconst winner = this.state.winner;\n\t\tconst isEndingRound = this.state.game.isEndingRound;\n\t\tconst votedFighter = this.state.votedFighter;\n\t\tconst hasVoted = this.state.hasVoted;\n\t\tconst gameCount = this.state.gameCount;\n\n\n\t\tconsole.log(\"isFighter: \" + isFighter + (isFighter ? (\" (\"+ (isFighter1 ? \"1\" : \"2\") + \")\") : \"\"));\n\t\tconsole.log(\"game.players.length: \" + game.players.length);\n\t\tconsole.log(\"game.players: \");\n\t\tconsole.log(game.players);\n\t\t//console.log(\"hand cards:\");\n\t\t//console.log(handCards);\n\n\t\tlet content = \"\";\n\n\t\tif(game.players.length <= 1) {\n\t\t\t//Alone in the room, wainting for players to join\n\t\t\tcontent = (\n\t\t\t\t<div className=\"game-board\">\n\t\t\t\t\t<div className=\"card-desk\">\n\t\t\t\t\t\t<h3 className=\"text-center game-message\">You are the only player in this room. Waiting other players to join...</h3>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else if(isFighter && isChoosing) {\n\t\t\tconsole.log(\"Is fighter and is choosing fighter cards\");\n\t\t\tcontent = (\n\t\t\t\t<div className=\"game-board\">\n\t\t\t\t\t<div className=\"timer\">\n\t\t\t\t\t\t<span>Time to choose: {chooseTimer}s</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"card-desk\">\n\t\t\t\t\t\t<h3 className=\"text-center\">Choose your cards:</h3>\n\t\t\t\t\t\t<CardLineReact\n\t\t\t\t\t\t\tkey={1+(gameCount*10)}\n\t\t\t\t\t\t\tcards={this.state.player.charCards}\n\t\t\t\t\t\t\tisFighter={isFighter && isFighter1}\n\t\t\t\t\t\t\tisChoosing={true}\n\t\t\t\t\t\t\tisFighting={isFighting}\n\t\t\t\t\t\t\tselectCard={(cardIndex) => this.handleCharSelection(cardIndex)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t<CardLineReact\n\t\t\t\t\t\t\tkey={2+(gameCount*10)}\n\t\t\t\t\t\t\tcards={this.state.player.attrCards}\n\t\t\t\t\t\t\tisFighter={isFighter && !isFighter1}\n\t\t\t\t\t\t\tisChoosing={true}\n\t\t\t\t\t\t\tisFighting={isFighting}\n\t\t\t\t\t\t\tselectCard={(cardIndex) => this.handleAttrSelection(cardIndex)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div className=\"choose-button\">\n\t\t\t\t\t\t\t<button onClick={() => this.chooseCards()} className=\"btn btn-primary\" disabled={(this.state.selectedCharCard == null || this.state.selectedAttrCard == null)}>Select cards</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else if(isFighter && !isChoosing && this.state.game.isChoosing) {\n\t\t\tconsole.log(\"Is fighter, chose fighter cards, but opponent didn't yet\");\n\t\t\tcontent = (\n\t\t\t\t<div className=\"game-board\">\n\t\t\t\t\t<div className=\"card-desk\">\n\t\t\t\t\t\t<h3 className=\"text-center game-message\">Wait for opponent to choose his/her cards.</h3>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\n\t\t} else if(isFighter && !this.state.game.isChoosing) {\n\t\t\tconsole.log(\"Is fighter and fight started\");\n\t\t\tcontent = (\n\t\t\t\t<div className=\"card-desk\">\n\t\t\t\t\t<div className=\"game-board\">\n\t\t\t\t\t\t<div className=\"timer\">\n\t\t\t\t\t\t\t{isFighting ? (<span>Time till voting: {fightTimer}s</span>) : \"\"}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"card-desk\">\n\t\t\t\t\t\t\t<h3>{winner != 0 ? (fighter1.socketID == player.socketID ? \"Your cards:\" : fighter1.username + \"'s cards:\") : (<span className=\"winner-msg\">{fighter1.username} won the fight!</span>)}</h3>\n\t\t\t\t\t\t\t<CardLineReact\n\t\t\t\t\t\t\t\tkey={3+(gameCount*10)}\n\t\t\t\t\t\t\t\tcards={fighter1.fighterCards}\n\t\t\t\t\t\t\t\tisFighter={isFighter && isFighter1}\n\t\t\t\t\t\t\t\tisChoosing={false}\n\t\t\t\t\t\t\t\tisChosen={votedFighter == 0}\n\t\t\t\t\t\t\t\tisFighting={isFighting}\n\t\t\t\t\t\t\t\thasVoted={hasVoted}\n\t\t\t\t\t\t\t\tselectCard={(cardIndex) => this.handleCharSelection(cardIndex)}\n\t\t\t\t\t\t\t\trunActions={(actions) => this.props.handleRunActions(actions)}\n\t\t\t\t\t\t\t\thandleVote={() => this.handleVote(0)}\n\t\t\t\t\t\t\t\tisWinner={winner != null ? (winner == 0 ? true : false) : null}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<h3>{winner != 1 ? (fighter2.socketID == player.socketID ? \"Your cards:\" : fighter2.username + \"'s cards:\") : (<span className=\"winner-msg\">{fighter2.username} won the fight!</span>)}</h3>\n\t\t\t\t\t\t\t<CardLineReact\n\t\t\t\t\t\t\t\tkey={4+(gameCount*10)}\n\t\t\t\t\t\t\t\tcards={fighter2.fighterCards}\n\t\t\t\t\t\t\t\tisFighter={isFighter && !isFighter1}\n\t\t\t\t\t\t\t\tisChoosing={false}\n\t\t\t\t\t\t\t\tisChosen={votedFighter == 1}\n\t\t\t\t\t\t\t\tisFighting={isFighting}\n\t\t\t\t\t\t\t\thasVoted={hasVoted}\n\t\t\t\t\t\t\t\tselectCard={(cardIndex) => this.handleAttrSelection(cardIndex)}\n\t\t\t\t\t\t\t\trunActions={(actions) => this.props.handleRunActions(actions)}\n\t\t\t\t\t\t\t\thandleVote={() => this.handleVote(1)}\n\t\t\t\t\t\t\t\tisWinner={winner != null ? (winner == 1 ? true : false) : null}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\n\t\t} else if(!isFighter && isEndingRound) {\n\t\t\tconsole.log(\"Is spectator and is waiting for the next round to start\");\n\t\t\tcontent = (\n\t\t\t\t<div className=\"game-board\">\n\t\t\t\t\t<div className=\"card-desk\">\n\t\t\t\t\t\t<h3 className=\"text-center game-message\">Wait till current round ends.</h3>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\n\t\t} else if(!isFighter && this.state.game.isChoosing) {\n\t\t\tconsole.log(\"Is spectator and is waiting for the fight to start\");\n\t\t\tcontent = (\n\t\t\t\t<div className=\"game-board\">\n\t\t\t\t\t<div className=\"card-desk\">\n\t\t\t\t\t\t<h3 className=\"text-center game-message\">Wait for fighters to choose their cards.</h3>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\n\t\t} else if(!isFighter && !this.state.game.isChoosing) {\n\t\t\tconsole.log(\"Is spectator and fight started\");\n\t\t\tcontent = (\n\t\t\t\t<div className=\"game-board\">\n\t\t\t\t\t<div className=\"timer\">\n\t\t\t\t\t\t{isFighting ? (<span>Time till voting: {fightTimer}s</span>) : \"\"}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"card-desk\">\n\t\t\t\t\t\t<h3>{winner != 0 ? (fighter1.socketID == player.socketID ? \"Your cards:\" : fighter1.username + \"'s cards:\") : (<span className=\"winner-msg\">{fighter1.username} won the fight!</span>)}</h3>\n\t\t\t\t\t\t<CardLineReact\n\t\t\t\t\t\t\tkey={3+(gameCount*10)}\n\t\t\t\t\t\t\tcards={fighter1.fighterCards}\n\t\t\t\t\t\t\tisFighter={isFighter && isFighter1}\n\t\t\t\t\t\t\tisChoosing={false}\n\t\t\t\t\t\t\tisChosen={votedFighter == 0}\n\t\t\t\t\t\t\tisFighting={isFighting}\n\t\t\t\t\t\t\thasVoted={hasVoted}\n\t\t\t\t\t\t\tselectCard={(cardIndex) => this.handleCharSelection(cardIndex)}\n\t\t\t\t\t\t\thandleVote={() => this.handleVote(0)}\n\t\t\t\t\t\t\tisWinner={winner != null ? (winner == 0 ? true : false) : null}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t<h3>{winner != 1 ? (fighter2.socketID == player.socketID ? \"Your cards:\" : fighter2.username + \"'s cards:\") : (<span className=\"winner-msg\">{fighter2.username} won the fight!</span>)}</h3>\n\t\t\t\t\t\t<CardLineReact\n\t\t\t\t\t\t\tkey={4+(gameCount*10)}\n\t\t\t\t\t\t\tcards={fighter2.fighterCards}\n\t\t\t\t\t\t\tisFighter={isFighter && !isFighter1}\n\t\t\t\t\t\t\tisChoosing={false}\n\t\t\t\t\t\t\tisChosen={votedFighter == 1}\n\t\t\t\t\t\t\tisFighting={isFighting}\n\t\t\t\t\t\t\thasVoted={hasVoted}\n\t\t\t\t\t\t\tselectCard={(cardIndex) => this.handleAttrSelection(cardIndex)}\n\t\t\t\t\t\t\thandleVote={() => this.handleVote(1)}\n\t\t\t\t\t\t\tisWinner={winner != null ? (winner == 1 ? true : false) : null}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\treturn content;\n\t}\n}\n\nclass Login extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tusername: \"\",\n\t\t\troom: \"\",\n\t\t\tmaxRound: 10,\n\t\t\tinputMinRound: 4,\n\t\t\tinputMaxRound: 54,\n\t\t\tmaxPlayers: 5,\n\t\t\tisPrivate: true,\n\t\t\tloginError: \"\",\n\t\t\ttabSelected: 0\n\t\t}\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.handleFindGame = this.handleFindGame.bind(this);\n\t\tthis.handleCreateRoom = this.handleCreateRoom.bind(this);\n\t\tthis.handleChangeTab = this.handleChangeTab.bind(this);\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tconst {loginError, room} = this.props;\n\t\tif (prevProps.loginError !== loginError) {\n\t\t\tthis.setState({loginError: loginError});\n\t\t}\n\t\tif (prevProps.room !== room) {\n\t\t\troom = room.replace(/[^a-zA-Z0-9_\\-]/g, \"\").trim();\n\t\t\tthis.setState({room: room});\n\t\t}\n\t}\n\n\thandleChange(event) {\n\t\tconst target = event.target;\n\t\tconst name = target.name;\n\t\tlet value = name === 'isPrivate' ? target.checked : target.value;\n\n\t\tif(name === \"room\") {\n\t\t\tvalue = value.replace(/[^a-zA-Z0-9_\\- ]/g, \"\");\n\n\t\t} else if(name === \"maxPlayers\") {\n\t\t\tconst inputMinRound = value - 1;\n\t\t\tconst inputMaxRound = (value * 10) - 1;\n\t\t\tconst maxRound = this.state.maxRound;\n\t\t\tthis.setState({inputMinRound: inputMinRound, inputMaxRound: inputMaxRound});\n\t\t\tif(maxRound < inputMinRound) this.setState({maxRound: inputMinRound});\n\t\t\tif(maxRound > inputMaxRound) this.setState({maxRound: inputMaxRound});\n\t\t}\n\n\t\tconsole.log(\"changing state '\" + name + \"' to '\" + value + \"'\");\n\t\tthis.setState({\n\t\t\t[name]: value\n\t\t});\n\t}\n\n\thandleFindGame() {\n\t\t//event.preventDefault();\n\t\tthis.props.findRoom(this.state.username, this.state.room);\n\t}\n\n\thandleCreateRoom() {\n\t\t//event.preventDefault();\n\t\tthis.props.createRoom(this.state.username, this.state.room, this.state.maxRound, this.state.maxPlayers, this.state.isPrivate);\n\t}\n\n\thandleChangeTab(tabNum) {\n\t\tthis.setState({tabSelected: tabNum});\n\t\tthis.props.setLoginError(\"\");\n\t}\n\n\trender() {\n\t\tconst username = this.state.username;\n\t\tconst room = this.state.room;\n\t\tconst loginError = this.state.loginError;\n\t\tconst tabSelected = this.state.tabSelected;\n\t\tconst maxRound = this.state.maxRound;\n\t\tconst maxPlayers = this.state.maxPlayers;\n\t\tconst isPrivate = this.state.isPrivate;\n\t\tconst inputMinRound = this.state.inputMinRound;\n\t\tconst inputMaxRound = this.state.inputMaxRound;\n\n\t\tlet formSelected = \"\";\n\n\t\tif(tabSelected == 0) {\n\t\t\tformSelected = (\n\t\t\t\t<form className=\"login-form\">\n\t\t\t\t\t<h4>Find room</h4>\n\t\t\t\t\t<label>Username:</label>\n\t\t\t\t\t<input type=\"text\" name=\"username\" maxLength=\"25\" value={username} onChange={(event) => this.handleChange(event)}/>\n\t\t\t\t\t<label>Room name:</label>\n\t\t\t\t\t<input type=\"text\" name=\"room\" maxLength=\"25\" value={room} onChange={(event) => this.handleChange(event)} />\n\t\t\t\t\t<div className=\"form-tip\">Leave blank to find a random room</div>\n\t\t\t\t\t<button type=\"button\" onClick={this.handleFindGame}>Find game</button>\n\t\t\t\t\t<div className=\"error-msg\">\n\t\t\t\t\t\t<span>{loginError}</span>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t);\n\t\t} else if(tabSelected == 1) {\n\t\t\tformSelected = (\n\t\t\t\t<form className=\"login-form\">\n\t\t\t\t\t<h4>Create room</h4>\n\t\t\t\t\t<label>Username:</label>\n\t\t\t\t\t<input type=\"text\" name=\"username\" maxLength=\"25\" value={username} onChange={(event) => this.handleChange(event)}/>\n\t\t\t\t\t<label>Room name:</label>\n\t\t\t\t\t<input type=\"text\" name=\"room\" maxLength=\"25\" value={room} onChange={(event) => this.handleChange(event)} />\n\t\t\t\t\t<div className=\"form-tip\">Required (at least 5 characters)</div>\n\t\t\t\t\t<div className=\"form-same-row\">\n\t\t\t\t\t\t<label>Number of rounds:</label>\n\t\t\t\t\t\t<input type=\"number\" name=\"maxRound\" value={maxRound} min={inputMinRound} max={inputMaxRound} onChange={(event) => this.handleChange(event)} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"form-same-row\">\n\t\t\t\t\t\t<label>Max players:</label>\n\t\t\t\t\t\t<input type=\"number\" name=\"maxPlayers\" value={maxPlayers} max=\"11\" min=\"2\" onChange={(event) => this.handleChange(event)} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"form-same-row\">\n\t\t\t\t\t\t<input type=\"checkbox\" name=\"isPrivate\" checked={isPrivate} onChange={(event) => this.handleChange(event)} />\n\t\t\t\t\t\t<label>Is a private room</label>\n\t\t\t\t\t</div>\n\t\t\t\t\t<button type=\"button\" onClick={this.handleCreateRoom} disabled={room.length < 5 ? true : false}>Create room</button>\n\t\t\t\t\t<div className=\"error-msg\">\n\t\t\t\t\t\t<span>{loginError}</span>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"login-box\">\n\t\t\t\t<div className=\"tabs\">\n\t\t\t\t\t<button type=\"button\" className={tabSelected === 0 ? 'form-tab selected-tab' : 'form-tab'} onClick={() => this.handleChangeTab(0)}>Find room</button>\n\t\t\t\t\t<button type=\"button\" className={tabSelected === 1 ? 'form-tab selected-tab' : 'form-tab'} onClick={() => this.handleChangeTab(1)}>Create room</button>\n\t\t\t\t</div>\n\t\t\t\t{formSelected}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n\nclass GameHeader extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tusername: props.username,\n\t\t\troom: props.room,\n\t\t\troundCount: props.roundCount,\n\t\t\tmaxRound: props.maxRound,\n\t\t\tnextGameTimer: props.nextGameTimer\n\t\t}\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tconst {username, room, roundCount, maxRound, nextGameTimer} = this.props;\n\t\tif (prevProps.username !== username) {\n\t\t\tthis.setState({username: username});\n\t\t}\n\t\tif (prevProps.room !== room) {\n\t\t\tthis.setState({room: room});\n\t\t}\n\t\tif (prevProps.roundCount !== roundCount) {\n\t\t\tthis.setState({roundCount: roundCount});\n\t\t}\n\t\tif (prevProps.maxRound !== maxRound) {\n\t\t\tthis.setState({maxRound: maxRound});\n\t\t}\n\t\tif (prevProps.nextGameTimer !== nextGameTimer) {\n\t\t\tthis.setState({nextGameTimer: nextGameTimer});\n\t\t}\n\t}\n\n\trender() {\n\t\tconst username = this.state.username;\n\t\tconst room = this.state.room;\n\t\tconst roundCount = this.state.roundCount;\n\t\tconst maxRound = this.state.maxRound;\n\t\tconst nextGameTimer = this.state.nextGameTimer;\n\n\t\treturn (\n\t\t\t<div className=\"game-header\">\n\t\t\t\t<div className=\"container-fluid container-md\">\n\t\t\t\t\t<div className=\"header-content\">\n\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t<div className=\"col-sm-auto\">\n\t\t\t\t\t\t\t\t<div className=\"logo\">\n\t\t\t\t\t\t\t\t\t<h2>SUPERFIGHT</h2>\n\t\t\t\t\t\t\t\t\t<span>a game of absurd arguments</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"col-sm\">\n\t\t\t\t\t\t\t\t<div className=\"game-info\">\n\t\t\t\t\t\t\t\t\t<h3>Welcome,<br /> {username}</h3>\n\t\t\t\t\t\t\t\t\t{room !== '' ? (<span className=\"room-info\">You are in room '<span className=\"font-weight-bold\">{room}</span>'<br/></span>) : (<br/>)}\n\t\t\t\t\t\t\t\t\t<span className=\"round-info\">{roundCount <= maxRound ? (roundCount + \"/\" + maxRound) : (\"Game starts in \" + nextGameTimer + \"s\")}</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n\nclass GameScoreboard extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tgame: props.game,\n\t\t\tplayer: props.player,\n\t\t\twinnerPlayer: props.winnerPlayer,\n\t\t\tnextGameTimer: props.nextGameTimer\n\t\t}\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tconst {game, player, winner, nextGameTimer} = this.props;\n\t\tif (prevProps.game !== game) {\n\t\t\tthis.setState({game: game});\n\t\t}\n\t\tif (prevProps.player !== player) {\n\t\t\t//this.setState({player: player});\n\t\t}\n\t\tif (prevProps.winner !== winner) {\n\t\t\t//this.setState({winner: winner});\n\t\t}\n\t\tif (prevProps.nextGameTimer !== nextGameTimer) {\n\t\t\tthis.setState({nextGameTimer: nextGameTimer});\n\t\t}\n\t}\n\n\trender() {\n\t\tconst game = this.state.game;\n\t\tconst player = this.state.player;\n\t\tconst winnerPlayer = this.state.winnerPlayer;\n\t\tconst winnerCards = winnerPlayer ? winnerPlayer.fighterCards : [];\n\t\tconst nextGameTimer = this.state.nextGameTimer;\n\n\t\tconst scoreboard = game.players.sort((p1, p2) => {return p2.winCount - p1.winCount}).map((playerIter, i) => {\n\t\t\tconst classes = (playerIter.socketID === player.socketID) ? \"myself\" : \"\";\n\t\t\treturn (\n\t\t\t\t<tr key={playerIter.socketID} className={classes}>\n\t\t\t\t\t<td><span>{i+1}</span>{playerIter.username}</td>\n\t\t\t\t\t<td>{playerIter.winCount}</td>\n\t\t\t\t</tr>\n\t\t\t)\n\t\t});\n\n\t\treturn (\n\t\t\t<div className=\"game-scoreboard\">\n\t\t\t\t<div className=\"winner-cards\">\n\t\t\t\t\t<h3><b>{winnerPlayer ? winnerPlayer.username : '?'}</b> is the super fighter!</h3>\n\t\t\t\t\t<CardLineReact\n\t\t\t\t\t\tcards={winnerCards}\n\t\t\t\t\t\tisFighter={false}\n\t\t\t\t\t\tisChoosing={false}\n\t\t\t\t\t\tisFighting={true}\n\t\t\t\t\t\tcenterCards={true}\n\t\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"timer\">\n\t\t\t\t\t<span>New game starts in {nextGameTimer}s</span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"scoreboard\">\n\t\t\t\t\t<h4>Scoreboard</h4>\n\t\t\t\t\t<table>\n\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t\t\tPlayer\n\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t\t\tWins\n\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t{scoreboard}\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n// ========================================\n\n\nfunction App() {\n\tconst [isLogged, setLogged] = useState(false);\n\tconst [username, setName] = useState(\"\");\n\tconst [room, setRoom] = useState(\"\");\n\tconst [loginError, setLoginError] = useState(\"\");\n\n\tconst [player, setPlayer] = useState({});\n\tconst [game, setGame] = useState({});\n\tconst [chooseTimer, setChooseTimer] = useState(60);\n\tconst [fightTimer, setFightTimer] = useState(30);\n\tconst [isFighting, setIsFighting] = useState(true);\n\tconst [selectedCharCard, setSelectedCharCard] = useState(null);\n\tconst [selectedAttrCard, setSelectedAttrCard] = useState(null);\n\tconst [roundCount, setRoundCount] = useState(0);\n\tconst [isFighter, setIsFighter] = useState(false);\n\tconst [winner, setWinner] = useState(null);\n\tconst [winnerPlayer, setWinnerPlayer] = useState(null);\n\tconst [nextGameTimer, setNextGameTimer] = useState(60);\n\n\tconst [gameCount, setGameCount] = useState(0);\n\n\tconst [isPlayerListHidden, setPlayerListHidden] = useState(false);\n\n\tuseEffect(() => {\n\t\t//document.title = 'Superfight';\n\n\t\tsocket.on(\"setLoginError\", (errorMsg) => {\n\t\t\tconsole.log(\"Login Error: \" + errorMsg);\n\t\t\tsetLogged(false);\n\t\t\tsetLoginError(errorMsg);\n\t\t});\n\n\t\tsocket.on(\"startGame\", (newPlayer, newGame, newIsFighter, newGameCount) => {\n\t\t\tconsole.log(\"starting game\");\n\t\t\tsetLogged(true);\n\t\t\tsetPlayer(newPlayer);\n\t\t\tsetName(newPlayer.username);\n\t\t\tsetGame(newGame);\n\t\t\tsetRoom(newGame.roomName);\n\t\t\tsetIsFighting(newGame.isFighting);\n\t\t\tsetWinnerPlayer(null);\n\t\t\tsetWinner(null);\n\t\t\tsetIsFighter(false);\n\t\t\tsetRoundCount(0);\n\t\t\tsetSelectedCharCard(null);\n\t\t\tsetSelectedAttrCard(null);\n\t\t\tsetFightTimer(30);\n\t\t\tsetChooseTimer(60);\n\t\t\tsetNextGameTimer(60);\n\t\t\tsetGameCount(newGameCount);\n\t\t\tsetLoginError(\"\");\n\t\t\tconsole.log('player set:');\n\t\t\tconsole.log(newPlayer);\n\t\t\tconsole.log('game set:');\n\t\t\tconsole.log(newGame);\n\t\t\t//console.log('isFighter set:' + isFighter);\n\t\t\tconsole.log('isFighting set: ' + newGame.isFighting);\n\t\t\tdocument.title = 'Superfight - ' + newGame.roomName;\n\t\t\tsetRoundCount(newGame.roundCount);\n\t\t\tconsole.log('Round set to: ', newGame.roundCount);\n\t\t});\n\n\t\tsocket.on(\"setGame\", (newGame, newIsFighter = null, message = null) => {\n\t\t\tsetGame(newGame);\n\t\t\tif(message != null) console.log(\"server says: \" + message);\n\t\t\t//checkIsFighter(newGame);\n\t\t\t//if(newIsFighter != null) setIsFighter(newIsFighter);\n\t\t\tconsole.log('game set:');\n\t\t\tconsole.log(newGame);\n\t\t\t//console.log('isFighter set:' + newIsFighter);\n\t\t});\n\n\t\tsocket.on(\"setPlayer\", (newPlayer, newIsFighter = null) => {\n\t\t\tsetPlayer(newPlayer);\n\t\t\t//if(newIsFighter != null) setIsFighter(newIsFighter);\n\t\t\tconsole.log('player set:');\n\t\t\tconsole.log(newPlayer);\n\t\t\t//console.log('isFighter set: ' + newIsFighter);\n\t\t});\n\n\t\tsocket.on(\"setIsFighter\", newIsFighter => {\n\t\t\tsetIsFighter(newIsFighter);\n\t\t\tconsole.log('isFighter set: ' + newIsFighter);\n\t\t});\n\n\t\tsocket.on(\"fightEnded\", (newGame) => {\n\t\t\tconsole.log(\"ending fight\");\n\t\t\tsetGame(newGame);\n\t\t\tsetIsFighting(newGame.isFighting);\n\t\t\tsetFightTimer(30);\n\t\t\tconsole.log('game set:');\n\t\t\tconsole.log(newGame);\n\t\t\tconsole.log('isFighting set: ' + newGame.isFighting);\n\t\t});\n\n\t\tsocket.on(\"startDrawRound\", (newGame) => {\n\t\t\tconsole.log(\"starting draw round\");\n\t\t\tsetGame(newGame);\n\t\t\tsetIsFighting(true);\n\t\t\tconsole.log('game set:');\n\t\t\tconsole.log(newGame);\n\t\t\tconsole.log('isFighting set: ' + true);\n\t\t});\n\n\t\tsocket.on(\"informWinner\", (fighterNum, newGame = null) => {\n\t\t\tconsole.log(\"Fighter \" + fighterNum + \" won the round\");\n\t\t\tsetWinner(fighterNum);\n\t\t\tconsole.log('winner set');\n\t\t\tif(newGame != null) {\n\t\t\t\tsetGame(newGame);\n\t\t\t\tconsole.log('game set:');\n\t\t\t\tconsole.log(newGame);\n\t\t\t}\n\n\t\t\t// stop receiving game objects\n\t\t\tsocket.removeListener('setGame');\n\t\t});\n\n\t\tsocket.on(\"startNewRound\", (newGame) => {\n\t\t\tconsole.log(\"starting a new round (\" + game.roundCount + \")\");\n\t\t\tsetGame(newGame);\n\t\t\tsetIsFighting(true);\n\t\t\tsetWinner(null);\n\t\t\tconsole.log('game set:');\n\t\t\tconsole.log(newGame);\n\t\t\tconsole.log('isFighting set: ' + true);\n\t\t\tconsole.log('winner set: ' + null);\n\t\t\tsetRoundCount(newGame.roundCount);\n\t\t\tconsole.log('Round set to: ', newGame.roundCount);\n\n\t\t\t// start receiving game objects again\n\t\t\tsocket.on(\"setGame\", (newGame, newIsFighter = null, message = null) => {\n\t\t\t\tsetGame(newGame);\n\t\t\t\tif(message != null) console.log(\"server says: \" + message);\n\t\t\t\tconsole.log('game set:');\n\t\t\t\tconsole.log(newGame);\n\t\t\t});\n\t\t});\n\n\t\tsocket.on(\"setChooseTimer\", chooseTimer => {\n\t\t\tsetChooseTimer(chooseTimer);\n\t\t\tconsole.log('chooseTimer set:');\n\t\t\tconsole.log(chooseTimer);\n\t\t});\n\n\t\tsocket.on(\"setFightTimer\", fightTimer => {\n\t\t\tsetFightTimer(fightTimer);\n\t\t\tconsole.log('fightTimer set:');\n\t\t\tconsole.log(fightTimer);\n\t\t});\n\n\t\tsocket.on(\"setNextGameTimer\", nextGameTimer => {\n\t\t\tsetNextGameTimer(nextGameTimer);\n\t\t\tconsole.log('nextGameTimer set:');\n\t\t\tconsole.log(nextGameTimer);\n\t\t});\n\n\t\tsocket.on(\"endGame\", (winnerPlayer, newGame) => {\n\t\t\tconsole.log(\"Game ended. Winner: \" + winnerPlayer.username);\n\t\t\tsetRoundCount(newGame.maxRound);\n\t\t\tsetGame(newGame);\n\t\t\tsetWinnerPlayer(winnerPlayer);\n\t\t\tconsole.log('game set:');\n\t\t\tconsole.log(newGame);\n\t\t\tconsole.log('winner player set:');\n\t\t\tconsole.log(winnerPlayer);\n\n\t\t\t// start receiving game objects again\n\t\t\tsocket.on(\"setGame\", (newGame, newIsFighter = null, message = null) => {\n\t\t\t\tsetGame(newGame);\n\t\t\t\tif(message != null) console.log(\"server says: \" + message);\n\t\t\t\tconsole.log('game set:');\n\t\t\t\tconsole.log(newGame);\n\t\t\t});\n\t\t});\n\n\t\treturn () => socket.disconnect();\n\t\t//return () => socket.removeAllListeners();\n\t}, []);\n\n\n\tuseEffect(() => {\n\t\tsocket.on(\"getSelectedCards\", () => {\n\t\t\tconsole.log(\"on getSelectedCards\");\n\t\t\tchooseCards();\n\t\t\tsetSelectedCharCard(null);\n\t\t\tsetSelectedAttrCard(null);\n\t\t\tsetChooseTimer(60);\n\t\t});\n\n\t\treturn () => socket.removeListener('getSelectedCards');\n\n\t}, [selectedCharCard, selectedAttrCard, isFighter, roundCount]);\n\n\tuseDeepCompareEffect(() => {\n\t\tif(game.roomName){\n\t\t\tlet fighter1Name = \"-\";\n\t\t\tlet fighter2Name = \"-\";\n\t\t\tif(game.fighters[0] != null ? (game.players[game.fighters[0]] != null ? true : false) : false) fighter1Name = game.players[game.fighters[0]].username;\n\t\t\tif(game.fighters[1] != null ? (game.players[game.fighters[1]] != null ? true : false) : false) fighter2Name = game.players[game.fighters[1]].username;\n\t\t\tdocument.title = 'Superfight: ' + fighter1Name + \" vs \" + fighter2Name;\n\t\t\tconsole.log(\"Document title: \" + document.title);\n\t\t}\n\n\t}, [game]);\n\n\tfunction findRoom(username, room) {\n\t\tsetName(username);\n\t\tsetRoom(room);\n\t\t//setLogged(true);\n\t\tconsole.log(\"Trying to join a room\");\n\t\tsocket.emit(\"joinRoom\", username, room);\n\t}\n\n\tfunction createRoom(username, room, maxRound, maxPlayers, isPrivate) {\n\t\tsetName(username);\n\t\tsetRoom(room);\n\t\t// setLogged(true);\n\t\tconsole.log(\"Trying to create a room\");\n\t\tsocket.emit(\"createRoom\", username, room, maxRound, maxPlayers, isPrivate);\n\t}\n\n\tfunction togglePlayerListHidden() {\n\t\tif(isPlayerListHidden) setPlayerListHidden(false);\n\t\telse setPlayerListHidden(true);\n\t}\n\n\tfunction chooseCards() {\n\t\tconsole.log(\"Cards were chosen\");\n\t\tconsole.log(\"aaaaaaaaaaa\");\n\t\tconsole.log(game);\n\t\tconst isFighter = checkIsFighter(game);\n\t\tif(isFighter) {\n\t\t\tconst auxSelectedCharCard = selectedCharCard ? selectedCharCard : 0;\n\t\t\tconst auxSelectedAttrCard = selectedAttrCard ? selectedAttrCard : 0;\n\t\t\tconsole.log(\"sending: \" + auxSelectedCharCard + \", \" + auxSelectedAttrCard);\n\t\t\tsocket.emit(\"chooseCards\", auxSelectedCharCard, auxSelectedAttrCard);\n\t\t}\n\t}\n\n\tfunction checkIsFighter(game) {\n\t\t// console.log(\"checking for game: \", game);\n\t\tlet auxIsFighter = false;\n\t\tif(game.fighters) {\n\t\t\tconst isFighter2 = (game.fighters[1] != null) ? (game.players[game.fighters[1]].socketID == player.socketID) : false;\n\t\t\tconsole.log(\"is fighter 2: \", isFighter2);\n\t\t\tauxIsFighter = (game.players[game.fighters[0]].socketID == player.socketID) || isFighter2;\n\t\t}\n\t\tsetIsFighter(auxIsFighter);\n\t\tconsole.log(\"isFighter checked: \", isFighter, \" | auxIsFighter: \", auxIsFighter);\n\t\treturn auxIsFighter;\n\t}\n\n\tfunction handleRunActions(actions) {\n\t\tconsole.log(\"Running card actions\");\n\t\tsocket.emit(\"runActions\", actions);\n\t}\n\n\tfunction handleVote(fighterNum) {\n\t\tconsole.log(\"Sending vote in fighter \" + fighterNum);\n\t\tsocket.emit(\"votePlayer\", fighterNum);\n\t}\n\n\tfunction playersList() {\n\t\tif(game.roomName) {\n\t\t\tconsole.log(\":::: game: \", game);\n\t\t\tconst fighter1 = game.fighters[0];\n\t\t\tconst fighter2 = game.fighters[1];\n\t\t\tconst nextFighter = game.nextFighter;\n\n\t\t\tconst playersList = game.players.map((playerIter, i) => {\n\t\t\t\tlet classes = fighter1 === i ? \"fighter-1\" : (fighter2 === i ? \"fighter-2\" : (nextFighter === i ? \"next-fighter\" : \"nothing\"));\n\t\t\t\tif(playerIter.socketID === player.socketID) classes += \" myself\";\n\t\t\t\t// console.log(playerIter.username + \" hasVoted: \" + playerIter.hasVoted);\n\t\t\t\treturn (\n\t\t\t\t\t<tr key={playerIter.socketID} className={classes}>\n\t\t\t\t\t\t<td>{playerIter.winCount}</td>\n\t\t\t\t\t\t<td><span className={playerIter.hasVoted ? \"has-voted\" : \"\"}>{playerIter.username}</span></td>\n\t\t\t\t\t</tr>\n\t\t\t\t)\n\t\t\t});\n\n\t\t\treturn(\n\t\t\t\t<div className={isPlayerListHidden ? \"players-list hidden\" : \"players-list\"}>\n\t\t\t\t\t<div className=\"header\">\n\t\t\t\t\t\t<button onClick={() => togglePlayerListHidden()}>Players</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"players-table\">\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t{playersList}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)\n\t\t} else {\n\t\t\treturn \"\";\n\t\t}\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"body-wrapper\">\n\t\t\t\t{(isLogged) ? (\n\t\t\t\t\t<GameHeader\n\t\t\t\t\t\tkey={gameCount}\n\t\t\t\t\t\troom={room}\n\t\t\t\t\t\tusername={username}\n\t\t\t\t\t\troundCount={game.roundCount}\n\t\t\t\t\t\tmaxRound={game.maxRound}\n\t\t\t\t\t\tnextGameTimer={nextGameTimer}\n\t\t\t\t\t\t/>\n\t\t\t\t) : ''}\n\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<div className=\"col\">\n\t\t\t\t\t\t\t{playersList()}\n\t\t\t\t\t\t\t{(!isLogged) ? (\n\t\t\t\t\t\t\t\t<Login\n\t\t\t\t\t\t\t\t\tfindRoom={(username, room) => findRoom(username, room)}\n\t\t\t\t\t\t\t\t\tcreateRoom={(username, roomName, maxRound, maxPlayers, isPrivate) => createRoom(username, roomName, maxRound, maxPlayers, isPrivate)}\n\t\t\t\t\t\t\t\t\tloginError={loginError}\n\t\t\t\t\t\t\t\t\tsetLoginError={() => setLoginError()}\n\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t) : ''}\n\n\t\t\t\t\t\t\t{(isLogged && game.roomName && player.socketID && (winnerPlayer == null)) ? (\n\t\t\t\t\t\t\t\t<Game\n\t\t\t\t\t\t\t\t\tkey={gameCount}\n\t\t\t\t\t\t\t\t\tgameCount={gameCount}\n\t\t\t\t\t\t\t\t\tgame={game}\n\t\t\t\t\t\t\t\t\tplayer={player}\n\t\t\t\t\t\t\t\t\tchooseTimer={chooseTimer}\n\t\t\t\t\t\t\t\t\tfightTimer={fightTimer}\n\t\t\t\t\t\t\t\t\tisFighting={isFighting}\n\t\t\t\t\t\t\t\t\tchooseCards={() => chooseCards()}\n\t\t\t\t\t\t\t\t\tsetSelectedCharCard={selectedCharCard => setSelectedCharCard(selectedCharCard)}\n\t\t\t\t\t\t\t\t\tsetSelectedAttrCard={selectedAttrCard => setSelectedAttrCard(selectedAttrCard)}\n\t\t\t\t\t\t\t\t\thandleRunActions={actions => handleRunActions(actions)}\n\t\t\t\t\t\t\t\t\thandleVote={(fighterNum) => handleVote(fighterNum)}\n\t\t\t\t\t\t\t\t\twinner={winner}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) : ''}\n\n\t\t\t\t\t\t\t{(isLogged && game.roomName && player.socketID && (winnerPlayer != null)) ? (\n\t\t\t\t\t\t\t\t<GameScoreboard\n\t\t\t\t\t\t\t\t\tkey={gameCount}\n\t\t\t\t\t\t\t\t\tgame={game}\n\t\t\t\t\t\t\t\t\tplayer={player}\n\t\t\t\t\t\t\t\t\twinnerPlayer={winnerPlayer}\n\t\t\t\t\t\t\t\t\tnextGameTimer={nextGameTimer}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) : ''}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"footer\">\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<div className=\"col\">\n\t\t\t\t\t\t\t<div className=\"footer-content\">\n\t\t\t\t\t\t\t\t<div>Superfight is a really fun multiplayer card game, created by <a href=\"https://twitter.com/jack_dire\">Jack Dire</a>. This is not an official project.<br />\n\t\t\t\t\t\t\t\tOfficial website: <a href=\"https://www.superfightgame.com/\">https://www.superfightgame.com/</a></div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nconst socket = socketIOClient(ENDPOINT);\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}